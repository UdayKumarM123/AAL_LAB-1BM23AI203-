#include <stdio.h>
#include <stdbool.h>

bool isSafe(int mat[][10], int row, int col, int n) {
    int i, j;
    for (i = 0; i < row; i++) {
        if (mat[i][col]) {
            return false;
        }
    }
    for (i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) {
        if (mat[i][j]) {
            return false;
        }
    }
    for (i = row - 1, j = col + 1; i >= 0 && j < n; i--, j++) {
        if (mat[i][j]) {
            return false;
        }
    }

    return true;
}

bool placeQueens(int mat[][10], int row, int n) {
    if (row == n) {
        return true;
    }

    // Consider this row and try placing the queen in all columns one by one
    for (int i = 0; i < n; i++) {
        if (isSafe(mat, row, i, n)) {
            mat[row][i] = 1;  // Place the queen
            if (placeQueens(mat, row + 1, n)) {
                return true;
            }
            mat[row][i] = 0;
        }
    }

    return false; 

void printBoard(int mat[][10], int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (mat[i][j]) {
                printf("Q ");
            } else {
                printf(". ");
            }
        }
        printf("\n");
    }
}

int main() {
    int n = 4;  // You can change the value of n to solve for different sizes
    int mat[10][10] = {0};  // Initialize the board with 0s (empty)

    if (placeQueens(mat, 0, n)) {
        printBoard(mat, n);  // Print the solution board
    } else {
        printf("Solution does not exist\n");
    }

    return 0;
}

